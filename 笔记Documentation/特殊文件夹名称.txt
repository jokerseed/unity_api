Assets
Assets文件夹是包含Unity项目使用的资源的主文件夹。
大多数API函数都假定所有内容都位于Assets文件夹中，因此不要求显示提及该文件夹。
但是有些需要Assets文件夹作为路径名的一部分，如AssetDatabase。

Editor
放在名为Editor的文件夹中的脚本被视为Editor脚本而不是运行是脚本。这些脚本在
开发期间向Editor添加功能，并在运行时在构建中不可用。
可在Assets文件夹中的任何位置添加多个Editor文件夹中。应将Editor脚本放在Editor文件夹内或
其中的子文件夹内。
注意：如果脚本位于Editor文件夹中，Unity不允许将派生自MonoBehaviour的组件分配给游戏对象。

Editor Default Resources
Editor 脚本可以使用通过 EditorGUIUtility.Load 函数按需加载的资源文件。
此函数在名为 Editor Default Resources 的文件夹中查找资源文件。
只能有一个 Editor Default Resources 文件夹，且必须将其放在项目的根目录；
直接位于 Assets 文件夹中。将所需的资源文件放在此 Editor Default Resources 文件夹内或其中的子文件夹内。
如果资源文件位于子文件夹中，请始终在传递给 EditorGUIUtility.Load 函数的路径中包含子文件夹路径。

Gizmos
Gizmos 允许将图形添加到 Scene 视图，以帮助可视化不可见的设计细节。
Gizmos.DrawIcon 函数在场景中放置一个图标，作为特殊对象或位置的标记。
必须将用于绘制此图标的图像文件放在名为 Gizmos 的文件夹中，这样才能被 DrawIcon 函数找到。
只能有一个 Gizmos 文件夹，且必须将其放在项目的根目录；直接位于 Assets 文件夹中。
将所需的资源文件放在此 Gizmos 文件夹内或其中的子文件夹内。
如果资源文件位于子文件夹中，请始终在传递给 Gizmos.DrawIcon 函数的路径中包含子文件夹路径。

Plug-ins
可为项目添加插件来扩展Unity的功能。插件通常用c/c++编写而成的本机DLL。这些插件可以访问第三方代码库，
系统调用和其他Unity内置功能。始终将插件放在Plugins中。
必须放在根目录，且只能有一个。

Resources
可从脚本中按需加载资源，而不必在场景中创建资源实例以用于游戏。为此，应将资源放在一个名为Resources的
文件夹中。通过使用Resource.Load函数即可加载这些资源。
可在Assets文件夹的任何位置添加多个Resources文件夹。Resources文件夹可以是Editor的子文件夹，可通过
Editor脚本加载，但是构建的时候会去掉。

Standard Assets
导入标准资源包是，资源将放在一个名为Standard Assets文件夹中。除了包含资源为，这些文件夹会对脚本
编译顺序产生影响。
只能有一个这样的文件夹，放于根目录。

StreamingAssets
将一个文件放在名为StreamingAssets的文件夹中，这样就会将其按原样复制到目标计算机，然后就可以从特定
文件夹中访问该文件。
只能有一个该文件夹，放于根目录。

隐藏的资源
在导入过程中，Unity 完全忽略 Assets 文件夹（或其子文件夹）中的以下文件和文件夹
以“**.**”开头的文件和文件夹。
以“**~**”结尾的文件和文件夹。
名为 cvs 的文件和文件夹。
扩展名为 .tmp 的文件。