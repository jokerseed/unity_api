对于大项目，可使用多个预设来导入相同类型的资源。例如，对于纹理资源，可能具有用于导入默认纹理的预设值以及
用于光照贴图纹理的另一个预设。在项目的Assets文件夹中，已经为其中每种类型的纹理设置单独文件夹。

以下脚本根据添加资源的文件夹而应用预设。此脚本选择与资源位于同一文件夹中的预设。如果此文件夹中
没有预设，则该脚本将搜索父文件夹。如果父文件夹中没有预设，unity将使用Preset Manager指定的默认预设。

using System.IO;
using UnityEditor;
using UnityEditor.Presets;

public class PresetImportPerFolder : AssetPostprocessor{
	void OnPreprocessAsset(){
		//确保我们在第一次导入资源时应用预设
		if(assetImporter.importSettingsMissing){
			//获取当前导入的资源文件夹
			var path = Path.getDirectoryName(assetPath);
			while(!string.IsNullOrEmpty(path)){
				//查找此文件夹中的所有预设资源
				var presetGuids = AssetDatabase.FindAsesets("t:Preset", new[]{path});
				foreach(var presetGuid in presetGuids){
					//确保不是在子文件夹中测试预设
					string presetPath = AssetDatabase.GUIDToAssetPath(presetGuid);
					if(Path.GetDirectoryName(presetPath) == path){
						//加载预设，然后尝试将其应用于导入
						var preset = AssetDatabase.LoadAssetAtPath<Preset>(presetPath);
						if(preset.ApplyTo(assetImporter))
							return;
					}
				}
				//在父文件夹中重试
				path = Path.GetDirectoryName(path);
			}
		}
	}
}